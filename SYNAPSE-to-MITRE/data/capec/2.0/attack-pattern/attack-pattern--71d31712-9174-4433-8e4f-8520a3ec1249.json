{
    "id": "bundle--caf04664-4b6e-42ff-930d-7ae8714419c6",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker exploits a weakness in input validation by controlling the format, structure, and composition of data to an input-processing interface. By supplying input of a non-standard or unexpected form an attacker can adversely impact the security of the target.",
            "external_references": [
                {
                    "external_id": "CAPEC-153",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/153.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                }
            ],
            "id": "attack-pattern--71d31712-9174-4433-8e4f-8520a3ec1249",
            "modified": "2022-02-22T00:00:00.000Z",
            "name": "Input Data Manipulation",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_extended_description": "\n            <xhtml:p>For example, using a different character encoding might cause dangerous text to be treated as safe text. Alternatively, the attacker may use certain flags, such as file extensions, to make a target application believe that provided data should be handled using a certain interpreter when the data is not actually of the appropriate type. This can lead to bypassing protection mechanisms, forcing the target to use specific components for input processing, or otherwise causing the user's data to be handled differently than might otherwise be expected. This attack differs from Variable Manipulation in that Variable Manipulation attempts to subvert the target's processing through the value of the input while Input Data Manipulation seeks to control how the input is processed.</xhtml:p>\n         ",
            "x_capec_parent_of_refs": [
                "attack-pattern--faf0ec21-da60-4efc-8c8e-7a6b63bea170",
                "attack-pattern--1f3b920a-a706-494c-9486-69531a514912",
                "attack-pattern--a1af7c24-25cb-46e5-a27b-ed316e1f91ce"
            ],
            "x_capec_prerequisites": [
                "The target must accept user data for processing and the manner in which this data is processed must depend on some aspect of the format or flags that the attacker can control."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}