{
    "id": "bundle--0dec2e59-d463-4a54-b549-3dc66a440512",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "Session sidejacking takes advantage of an unencrypted communication channel between a victim and target system. The attacker sniffs traffic on a network looking for session tokens in unencrypted traffic. Once a session token is captured, the attacker performs malicious actions by using the stolen token with the targeted application to impersonate the victim. This attack is a specific method of session hijacking, which is exploiting a valid session token to gain unauthorized access to a target system or information. Other methods to perform a session hijacking are session fixation, cross-site scripting, or compromising a user or server machine and stealing the session token.",
            "external_references": [
                {
                    "external_id": "CAPEC-102",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/102.html"
                },
                {
                    "external_id": "CWE-294",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/294.html"
                },
                {
                    "external_id": "CWE-522",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/522.html"
                },
                {
                    "external_id": "CWE-523",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/523.html"
                },
                {
                    "external_id": "CWE-319",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/319.html"
                },
                {
                    "external_id": "CWE-614",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/614.html"
                }
            ],
            "id": "attack-pattern--6a99b39b-b14a-4617-8aeb-bce85979f520",
            "modified": "2020-07-30T00:00:00.000Z",
            "name": "Session Sidejacking",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_child_of_refs": [
                "attack-pattern--63f43efb-7a34-4302-b3dc-8245100fdea9"
            ],
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Unreliable Execution"
                ],
                "Confidentiality": [
                    "Gain Privileges",
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_example_instances": [
                "The attacker and the victim are using the same WiFi public hotspot. When the victim connects to the hotspot, they has a hosted e-mail account open. This e-mail account uses AJAX on the client side which periodically asynchronously connects to the server side and transfers, amongst other things, the user's session token to the server. The communication is supposed to happen over HTTPS. However, the configuration in the public hotspot initially disallows the HTTPS connection (or any other connection) between the victim and the hosted e-mail servers because the victim first needs to register with the hotspot. The victim does so, but their e-mail client already defaulted to using a connection without HTTPS, since it was denied access the first time. Victim's session token is now flowing unencrypted between the victim's browser and the hosted e-mail servers. The attacker leverages this opportunity to capture the session token and gain access to the victim's hosted e-mail account."
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Detect Unprotected Session Token Transfer: </b>The attacker sniffs on the wireless network to detect unencrypted traffic that contains session tokens.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>The attacker uses a network sniffer tool like ferret or hamster to monitor the wireless traffic at a WiFi hotspot while examining it for evidence of transmittal of session tokens in unencrypted or recognizably encrypted form. An attacker applies their knowledge of the manner by which session tokens are generated and transmitted by various target systems to identify the session tokens.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Capture session token: </b>The attacker uses sniffing tools to capture a session token from traffic.</p></li><li> <p> <b>Insert captured session token: </b>The attacker attempts to insert a captured session token into communication with the targeted application to confirm viability for exploitation.</p></li></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Session Token Exploitation: </b>The attacker leverages the captured session token to interact with the targeted application in a malicious fashion, impersonating the victim.</p></li></ol></div>",
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "An attacker and the victim are both using the same WiFi network.",
                "The victim has an active session with a target system.",
                "The victim is not using a secure channel to communicate with the target system (e.g. SSL, VPN, etc.)",
                "The victim initiated communication with a target system that requires transfer of the session token or the target application uses AJAX and thereby periodically \"rings home\" asynchronously using the session token"
            ],
            "x_capec_resources_required": [
                "A packet sniffing tool, such as wireshark, can be used to capture session information."
            ],
            "x_capec_skills_required": {
                "Low": "Easy to use tools exist to automate this attack."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}