{
    "id": "bundle--d843c001-cc8e-40ed-94ef-51729115e7b3",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary corrupts or modifies the content of a schema for the purpose of undermining the security of the target. Schemas provide the structure and content definitions for resources used by an application. By replacing or modifying a schema, the adversary can affect how the application handles or interprets a resource, often leading to possible denial of service, entering into an unexpected state, or recording incomplete data.",
            "external_references": [
                {
                    "external_id": "CAPEC-271",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/271.html"
                },
                {
                    "external_id": "CWE-15",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/15.html"
                }
            ],
            "id": "attack-pattern--41cfbb50-1b96-4004-a42e-6e8d21dd6f87",
            "modified": "2023-01-24T00:00:00.000Z",
            "name": "Schema Poisoning",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_child_of_refs": [
                "attack-pattern--f9f65fdd-5857-4a57-a725-066465397601"
            ],
            "x_capec_consequences": {
                "Availability": [
                    "Unreliable Execution (A successful schema poisoning attack can compromise the availability of the target system's service by exhausting its available resources.)",
                    "Resource Consumption (A successful schema poisoning attack can compromise the availability of the target system's service by exhausting its available resources.)"
                ],
                "Confidentiality": [
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_example_instances": [
                "\n               <xhtml:p>In a JSON Schema Poisoning Attack, an adervary modifies the JSON schema to cause a Denial of Service (DOS) or to submit malicious input:</xhtml:p>\n               <xhtml:div style=\"margin-left:1em;\" class=\"attack\">{ \"title\": \"Contact\", \"type\": \"object\", \"properties\": { \"Name\": { \"type\": \"string\" }, \"Phone\": { \"type\": \"string\" }, \"Email\": { \"type\": \"string\" }, \"Address\": { \"type\": \"string\" } }, \"required\": [\"Name\", \"Phone\", \"Email\", \"Address\"] }</xhtml:div>\n               <xhtml:p>If the 'name' attribute is required in all submitted documents and this field is removed by the adversary, the application may enter an unexpected state or record incomplete data. Additionally, if this data is needed to perform additional functions, a Denial of Service (DOS) may occur.</xhtml:p>\n            ",
                "\n               <xhtml:p>In a Database Schema Poisoning Attack, an adversary alters the database schema being used to modify the database in some way. This can result in loss of data, DOS, or malicious input being submitted. Assuming there is a column named \"name\", an adversary could make the following schema change:</xhtml:p>\n               <xhtml:div style=\"margin-left:1em;\" class=\"attack\">ALTER TABLE Contacts MODIFY Name VARCHAR(65353);</xhtml:div>\n               <xhtml:p>The \"Name\" field of the \"Conteacts\" table now allows the storing of names up to 65353 characters in length. This could allow the adversary to store excess data within the database to consume system resource or to execute a DOS.</xhtml:p>\n            "
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Find target application and schema: </b>The adversary first finds the application that they want to target. This application must use schemas in some way, so the adversary also needs to confirm that schemas are being used.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Gain access to the system that the application is on and look for a schema.</td></tr><tr><td>Observe HTTP traffic to the application and look for a schema being transmitted.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Gain access to schema: </b>The adversary gains access to the schema so that they can modify the contents.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>For a local scenario, the adversary needs access to the machine that the schema is located on and gain permissions to alter the contents of the schema file.</td></tr><tr><td>For a remote scenario, the adversary needs to be able to perform an adversary in the middle attack on the HTTP traffic that contains a schema.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Poison schema: </b>Once the adversary gains access to the schema, they will alter it to achieve a desired effect. Locally, they can just modify the file. For remote schemas, the adversary will alter the schema in transit by performing an adversary in the middle attack.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Cause a denial of service by modifying the schema so that it does not contain required information for subsequent processing.</td></tr><tr><td>Manipulation of the data types described in the schema may affect the results of calculations. For example, a float field could be changed to an int field.</td></tr><tr><td>Change the encoding defined in the schema for certain fields allowing the contents to bypass filters that scan for dangerous strings. For example, the modified schema might use a URL encoding instead of ASCII, and a filter that catches a semicolon (;) might fail to detect its URL encoding (%3B).</td></tr></tbody></table></ol></div>",
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_parent_of_refs": [
                "attack-pattern--ebf4bdc7-73dd-47c4-96e1-1ff471efbcd2"
            ],
            "x_capec_prerequisites": [
                "Some level of access to modify the target schema.",
                "The schema used by the target application must be improperly secured against unauthorized modification and manipulation."
            ],
            "x_capec_resources_required": [
                "Access to the schema and the knowledge and ability modify it. Ability to replace or redirect access to the modified schema."
            ],
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}