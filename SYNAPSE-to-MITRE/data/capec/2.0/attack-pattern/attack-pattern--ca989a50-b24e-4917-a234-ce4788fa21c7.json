{
    "id": "bundle--6fdbe641-005d-40ca-a449-c86c7cd9078f",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack targets programs running with elevated privileges. The adversary tries to leverage a vulnerability in the running program and get arbitrary code to execute with elevated privileges.",
            "external_references": [
                {
                    "external_id": "CAPEC-69",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/69.html"
                },
                {
                    "external_id": "CWE-250",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/250.html"
                },
                {
                    "external_id": "CWE-15",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/15.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--ca989a50-b24e-4917-a234-ce4788fa21c7",
            "modified": "2021-10-21T00:00:00.000Z",
            "name": "Target Programs with Elevated Privileges",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_can_precede_refs": [
                "attack-pattern--e62000f0-addd-4156-b9fd-469bbb211d45",
                "attack-pattern--b6a2983b-1d97-4698-b210-961ed0523f33",
                "attack-pattern--4a29d66d-8617-4382-b456-578ecdb1609e",
                "attack-pattern--4cd18074-15c1-4206-8391-115685669623"
            ],
            "x_capec_child_of_refs": [
                "attack-pattern--c05fff04-b965-4a11-9c18-379dac31969f"
            ],
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Resource Consumption (Denial of Service)"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Find programs with elevated priveleges: </b>The adversary probes for programs running with elevated privileges.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Look for programs that write to the system directories or registry keys (such as HKLM, which stores a number of critical Windows environment variables). These programs are typically running with elevated privileges and have usually not been designed with security in mind. Such programs are excellent exploit targets because they yield lots of power when they break.</td></tr></tbody></table><li> <p> <b>Find vulnerability in running program: </b>The adversary looks for a vulnerability in the running program that would allow for arbitrary code execution with the privilege of the running program.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Look for improper input validation</td></tr><tr><td>Look for improper failure safety. For instance when a program fails it may authorize restricted access to anyone.</td></tr><tr><td>Look for a buffer overflow which may be exploited if an adversary can inject unvalidated data.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Execute arbitrary code: </b>The adversary exploits the vulnerability that they have found. For instance, they can try to inject and execute arbitrary code or write to OS resources.</p></li></ol></div>",
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The targeted program runs with elevated OS privileges.",
                "The targeted program accepts input data from the user or from another program.",
                "The targeted program is giving away information about itself. Before performing such attack, an eventual attacker may need to gather information about the services running on the host target. The more the host target is verbose about the services that are running (version number of application, etc.) the more information can be gather by an attacker.",
                "This attack often requires communicating with the host target services directly. For instance Telnet may be enough to communicate with the host target."
            ],
            "x_capec_skills_required": {
                "Low": "An attacker can use a tool to scan and automatically launch an attack against known issues. A tool can also repeat a sequence of instructions and try to brute force the service on the host target, an example of that would be the flooding technique.",
                "Medium": "More advanced attack may require knowledge of the protocol spoken by the host service."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Very High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}