{
    "id": "bundle--d7416c5e-20a5-4978-afce-4ba510867553",
    "objects": [
        {
            "created": "2021-10-21T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "\n            <xhtml:p>An adversary exploits missing or incorrectly configured access control within registers to read/write data that is not meant to be obtained or modified by a user.</xhtml:p>\n         ",
            "external_references": [
                {
                    "external_id": "CAPEC-680",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/680.html"
                },
                {
                    "external_id": "CWE-1224",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1224.html"
                },
                {
                    "external_id": "CWE-1231",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1231.html"
                },
                {
                    "external_id": "CWE-1233",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1233.html"
                },
                {
                    "external_id": "CWE-1262",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1262.html"
                },
                {
                    "external_id": "CWE-1283",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1283.html"
                },
                {
                    "description": "Brandon Hill, Huge Intel CPU Bug Allegedly Causes Kernel Memory Vulnerability With Up To 30% Performance Hit In Windows And Linux, 2018--01---02, David Altavilla and Hot Hardware, Inc",
                    "external_id": "REF-693",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://hothardware.com/news/intel-cpu-bug-kernel-memory-isolation-linux-windows-macos"
                }
            ],
            "id": "attack-pattern--1abd165a-57e9-4b78-9221-7b6fcdc57810",
            "modified": "2021-10-21T00:00:00.000Z",
            "name": "Exploitation of Improperly Controlled Registers",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_child_of_refs": [
                "attack-pattern--92cdcd3d-d734-4442-afc3-4599f261498b",
                "attack-pattern--aac17300-6cdd-4f50-82c3-da5a01d225ac"
            ],
            "x_capec_consequences": {
                "Confidentiality": [
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data"
                ]
            },
            "x_capec_domains": [
                "Hardware",
                "Hardware"
            ],
            "x_capec_example_instances": [
                "\n               <xhtml:p>During a System-on-Chip's (SoC) secure boot process, the code to be authenticated is measured to determine the code's validity. This entails the one-way hash of the code binary being calculated and extended to the previous hash. The value obtained after completion of the boot flow is then stored in a register with the intent of later verifying this value to determine if the boot flow has been tampered with. However, the register being used does not prevent an adversary from modifying the register's contents, which can result in the adversary spoofing the measurement data used in the attestation process.</xhtml:p>\n            "
            ],
            "x_capec_extended_description": "\n            <xhtml:p>Hardware systems often utilize trusted lock bits to prevent a set of registers from being written to or to restrict a register to only being written to once. Registers are also frequently used to store sensitive data leveraged in additional security operations, such as secure booting, authenticating code, device attestation, and more. However, the access control mechanisms meant to protect these registers may be fully missing or ineffective due to misconfiguration. If an adversary is able to discover improper access controls surrounding registers, it could result in the adversary obtaining sensitive data and/or modifying data that is meant to be immutable. This can ultimately result in processes like secure boot being circumvented or in protected configurations being modified.</xhtml:p>\n         ",
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "Awareness of the hardware being leveraged.",
                "Access to the hardware being leveraged."
            ],
            "x_capec_skills_required": {
                "High": "Intricate knowledge of registers."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}