{
    "id": "bundle--c3bada2a-efcf-420b-b5eb-06f9538ebca6",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "This attack targets the encoding of the Slash characters. An adversary would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the adversary many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.",
            "external_references": [
                {
                    "external_id": "CAPEC-79",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/79.html"
                },
                {
                    "external_id": "CWE-173",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/173.html"
                },
                {
                    "external_id": "CWE-180",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/180.html"
                },
                {
                    "external_id": "CWE-181",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/181.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-73",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/73.html"
                },
                {
                    "external_id": "CWE-22",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/22.html"
                },
                {
                    "external_id": "CWE-185",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/185.html"
                },
                {
                    "external_id": "CWE-200",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/200.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Markus Kuhn, UTF-8 and Unicode FAQ for Unix/Linux, 1999--06---04",
                    "external_id": "REF-525",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cl.cam.ac.uk/~mgk25/unicode.html"
                },
                {
                    "description": "Gunter Ollmann, URL Encoded Attacks - Attacks using the common web browser, CGISecurity.com",
                    "external_id": "REF-495",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://www.cgisecurity.com/lib/URLEmbeddedAttacks.html"
                }
            ],
            "id": "attack-pattern--eba7bbc3-fb5e-46c4-8547-742d1d144fb3",
            "modified": "2022-09-29T00:00:00.000Z",
            "name": "Using Slashes in Alternate Encoding",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_child_of_refs": [
                "attack-pattern--a1af7c24-25cb-46e5-a27b-ed316e1f91ce"
            ],
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_example_instances": [
                "\n               <xhtml:b>Attack Example: Slashes in Alternate Encodings</xhtml:b>\n               <xhtml:p>The two following requests are equivalent on most Web servers:</xhtml:p>\n               <xhtml:div style=\"margin-left:1em;\" class=\"informative\">http://target server/some_directory\\..\\..\\..\\winnt</xhtml:div>\n               <xhtml:p>is equivalent to</xhtml:p>\n               <xhtml:div style=\"margin-left:1em;\" class=\"informative\">http://target server/some_directory/../../../winnt</xhtml:div>\n               <xhtml:p>Multiple encoding conversion problems can also be leveraged as various slashes are instantiated in URL-encoded, UTF-8, or Unicode. Consider the strings</xhtml:p>\n               <xhtml:div style=\"margin-left:1em;\" class=\"informative\">http://target server/some_directory\\..%5C..%5C..\\winnt</xhtml:div>\n               <xhtml:p>where %5C is equivalent to the \\ character.</xhtml:p>\n            "
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Survey the application for user-controllable inputs: </b>Using a browser, an automated tool or by inspecting the application, an adversary records all entry points to the application.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.</td></tr><tr><td>Use a proxy tool to record all user input entry points visited during a manual traversal of the web application.</td></tr><tr><td>Use a browser to manually explore the website and analyze how it is constructed. Many browsers' plugins are available to facilitate the analysis or automate the discovery.</td></tr><tr><td>Manually inspect the application to find entry points.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Probe entry points to locate vulnerabilities: </b>The adversary uses the entry points gathered in the \"Explore\" phase as a target list and looks for areas where user input is used to access resources on the target host. The adversary attempts different encodings of slash characters to bypass input filters.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Try both backslash and forward slash characters</td></tr><tr><td>Try different encodings for slash characters such as %5C</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Traverse application directories: </b>Once the adversary determines how to bypass filters that filter out slash characters, they will manipulate the user input to include slashes in order to traverse directories and access resources that are not intended for the user.</p></li></ol></div>",
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The application server accepts paths to locate resources.",
                "The application server does insufficient input data validation on the resource path requested by the user.",
                "The access right to resources are not set properly."
            ],
            "x_capec_skills_required": {
                "Low": "An adversary can try variation of the slashes characters.",
                "Medium": "An adversary can use more sophisticated tool or script to scan a website and find a path filtering problem."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}