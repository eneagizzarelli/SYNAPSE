{
    "id": "bundle--3c532f79-478b-41ee-a77a-d7677b30d235",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker can craft special user-controllable input consisting of XPath expressions to inject the XML database and bypass authentication or glean information that they normally would not be able to. XPath Injection enables an attacker to talk directly to the XML database, thus bypassing the application completely. XPath Injection results from the failure of an application to properly sanitize input used as part of dynamic XPath expressions used to query an XML database.",
            "external_references": [
                {
                    "external_id": "CAPEC-83",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/83.html"
                },
                {
                    "external_id": "CWE-91",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/91.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                },
                {
                    "description": "XPath Injection",
                    "external_id": "39",
                    "source_name": "WASC",
                    "url": "http://projects.webappsec.org/XPath-Injection"
                },
                {
                    "description": "Blind XPath Injection",
                    "source_name": "OWASP Attacks",
                    "url": "https://owasp.org/www-community/attacks/Blind_XPath_Injection"
                },
                {
                    "description": "XPATH Injection",
                    "source_name": "OWASP Attacks",
                    "url": "https://owasp.org/www-community/attacks/XPATH_Injection"
                },
                {
                    "description": "OWASP Web Security Testing Guide, The Open Web Application Security Project (OWASP)",
                    "external_id": "REF-611",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/09-Testing_for_XPath_Injection.html"
                }
            ],
            "id": "attack-pattern--f51fd46e-a327-4c2d-a047-12fe2be6eb0b",
            "modified": "2022-02-22T00:00:00.000Z",
            "name": "XPath Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_child_of_refs": [
                "attack-pattern--aa6a831a-8eae-4690-b4a2-ff3e4d43a716"
            ],
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Confidentiality": [
                    "Gain Privileges",
                    "Read Data"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_example_instances": [
                "Consider an application that uses an XML database to authenticate its users. The application retrieves the user name and password from a request and forms an XPath expression to query the database. An attacker can successfully bypass authentication and login without valid credentials through XPath Injection. This can be achieved by injecting the query to the XML database with XPath syntax that causes the authentication check to fail. Improper validation of user-controllable input and use of a non-parameterized XPath expression enable the attacker to inject an XPath expression that causes authentication bypass."
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Survey the target: </b>Using a browser or an automated tool, an adversary records all instances of user-controllable input used to contruct XPath queries.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use an automated tool to record all instances of user-controllable input used to contruct XPath queries.</td></tr><tr><td>Use a browser to manually explore the website and analyze how the application processes inputs.</td></tr></tbody></table><li> <p> <b>Determine the tructure of queries: </b>Using manual or automated means, test inputs found for XPath weaknesses.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use an automated tool automatically probe the inputs for XPath weaknesses.</td></tr><tr><td>Manually probe the inputs using characters such as single quote (') that can cause XPath-releated errors, thus indicating an XPath weakness.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Inject content into XPath query: </b>Craft malicious content containing XPath expressions that is not validated by the application and is executed as part of the XPath queries.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use the crafted input to execute unexpected queries that can disclose sensitive database information to the attacker.</td></tr><tr><td>Use a combination of single quote (') and boolean expressions such as \"or 1=1\" to manipulate XPath logic.</td></tr><tr><td>Use XPath functions in the malicious content such as \"string-length\", \"substring\", or \"count\" to gain information about the XML document structure being used.</td></tr></tbody></table></ol></div>",
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "XPath queries used to retrieve information stored in XML documents",
                "User-controllable input not properly sanitized before being used as part of XPath queries"
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "Low": "XPath Injection shares the same basic premises with SQL Injection. An attacker must have knowledge of XPath syntax and constructs in order to successfully leverage XPath Injection"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}