{
    "id": "bundle--57903a27-7713-474b-a918-3e82afa1d27c",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "In an iFrame overlay attack the victim is tricked into unknowingly initiating some action in one system while interacting with the UI from seemingly completely different system.",
            "external_references": [
                {
                    "external_id": "CAPEC-222",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/222.html"
                },
                {
                    "external_id": "CWE-1021",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1021.html"
                },
                {
                    "description": "Michal Zalewski, Browser Security Handbook, 2008, Google Inc.",
                    "external_id": "REF-84",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://code.google.com/archive/p/browsersec/wikis/Main.wiki"
                },
                {
                    "description": "M. Mahemoff, Explaining the \"Don't Click\" Clickjacking Tweetbomb, 2009--02---12, Software As She's Developed",
                    "external_id": "REF-85",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://softwareas.com/explaining-the-dont-click-clickjacking-tweetbomb"
                }
            ],
            "id": "attack-pattern--b9593e93-5589-4ae9-b0e7-09fa5c3136e5",
            "modified": "2022-09-29T00:00:00.000Z",
            "name": "iFrame Overlay",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_child_of_refs": [
                "attack-pattern--ec41b2b3-a3b6-4af0-be65-69e82907dfef"
            ],
            "x_capec_consequences": {
                "Access_Control": [
                    "Bypass Protection Mechanism"
                ],
                "Accountability": [
                    "Gain Privileges"
                ],
                "Authentication": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)",
                    "Gain Privileges",
                    "Bypass Protection Mechanism"
                ],
                "Confidentiality": [
                    "Read Data"
                ],
                "Integrity": [
                    "Modify Data"
                ],
                "Non-Repudiation": [
                    "Gain Privileges"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_example_instances": [
                "The following example is a real-world iFrame overlay attack [2]. In this attack, the malicious page embeds Twitter.com on a transparent IFRAME. The status-message field is initialized with the URL of the malicious page itself. To provoke the click, which is necessary to publish the entry, the malicious page displays a button labeled \"Don't Click.\" This button is aligned with the invisible \"Update\" button of Twitter. Once the user performs the click, the status message (i.e., a link to the malicious page itself) is posted to their Twitter profile."
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Craft an iFrame Overlay page: </b>The adversary crafts a malicious iFrame overlay page.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>The adversary leverages iFrame overlay capabilities to craft a malicious iFrame overlay page.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>adversary tricks victim to load the iFrame overlay page: </b>adversary utilizes some form of temptation, misdirection or coercion to trick the victim to loading and interacting with the iFrame overlay page in a way that increases the chances that the victim will visit the malicious page.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Trick the victim to the malicious site by sending the victim an e-mail with a URL to the site.</td></tr><tr><td>Trick the victim to the malicious site by manipulating URLs on a site trusted by the victim.</td></tr><tr><td>Trick the victim to the malicious site through a cross-site scripting attack.</td></tr></tbody></table><li> <p> <b>Trick victim into interacting with the iFrame overlay page in the desired manner: </b>The adversary tricks the victim into clicking on the areas of the UI which contain the hidden action controls and thereby interacts with the target system maliciously with the victim's level of privilege.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Hide action controls over very commonly used functionality.</td></tr><tr><td>Hide action controls over very psychologically tempting content.</td></tr></tbody></table></ol></div>",
            "x_capec_extended_description": "\n            <xhtml:p>While being logged in to some target system, the victim visits the adversarys' malicious site which displays a UI that the victim wishes to interact with. In reality, the iFrame overlay page has a transparent layer above the visible UI with action controls that the adversary wishes the victim to execute. The victim clicks on buttons or other UI elements they see on the page which actually triggers the action controls in the transparent overlaying layer. Depending on what that action control is, the adversary may have just tricked the victim into executing some potentially privileged (and most undesired) functionality in the target system to which the victim is authenticated. The basic problem here is that there is a dichotomy between what the victim thinks they are clicking on versus what they are actually clicking on.</xhtml:p>\n         ",
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "The victim is communicating with the target application via a web based UI and not a thick client. The victim's browser security policies allow iFrames. The victim uses a modern browser that supports UI elements like clickable buttons (i.e. not using an old text only browser). The victim has an active session with the target system. The target system's interaction window is open in the victim's browser and supports the ability for initiating sensitive actions on behalf of the user in the target system."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "High": "Crafting the proper malicious site and luring the victim to this site is not a trivial task."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}