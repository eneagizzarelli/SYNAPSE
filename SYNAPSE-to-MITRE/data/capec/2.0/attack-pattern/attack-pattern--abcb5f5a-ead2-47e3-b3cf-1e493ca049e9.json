{
    "id": "bundle--a458a24a-3b26-4f25-a623-36b9415d3805",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "If a string is passed through a filter of some kind, then a terminal NULL may not be valid. Using alternate representation of NULL allows an adversary to embed the NULL mid-string while postfixing the proper data so that the filter is avoided. One example is a filter that looks for a trailing slash character. If a string insertion is possible, but the slash must exist, an alternate encoding of NULL in mid-string may be used.",
            "external_references": [
                {
                    "external_id": "CAPEC-53",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/53.html"
                },
                {
                    "external_id": "CWE-158",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/158.html"
                },
                {
                    "external_id": "CWE-172",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/172.html"
                },
                {
                    "external_id": "CWE-173",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/173.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "external_id": "CWE-697",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/697.html"
                },
                {
                    "external_id": "CWE-707",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/707.html"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                }
            ],
            "id": "attack-pattern--abcb5f5a-ead2-47e3-b3cf-1e493ca049e9",
            "modified": "2022-09-29T00:00:00.000Z",
            "name": "Postfix, Null Terminate, and Backslash",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_child_of_refs": [
                "attack-pattern--a1af7c24-25cb-46e5-a27b-ed316e1f91ce"
            ],
            "x_capec_consequences": {
                "Access_Control": [
                    "Gain Privileges"
                ],
                "Authorization": [
                    "Gain Privileges"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Gain Privileges"
                ],
                "Integrity": [
                    "Modify Data"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_example_instances": [
                "\n               <xhtml:p>A rather simple injection is possible in a URL:</xhtml:p>\n               <xhtml:div style=\"margin-left:1em;\" class=\"informative\">http://getAccessHostname/sekbin/helpwin.gas.bat?mode=&draw=x&file=x&module=&locale=[insert relative path here][%00][%5C]&chapter=</xhtml:div>\n               <xhtml:p>This attack has appeared with regularity in the wild. There are many variations of this kind of attack. Spending a short amount of time injecting against Web applications will usually result in a new exploit being discovered.</xhtml:p>\n            "
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Survey the application for user-controllable inputs: </b>Using a browser, an automated tool or by inspecting the application, an adversary records all entry points to the application.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.</td></tr><tr><td>Use a proxy tool to record all user input entry points visited during a manual traversal of the web application.</td></tr><tr><td>Use a browser to manually explore the website and analyze how it is constructed. Many browsers' plugins are available to facilitate the analysis or automate the discovery.</td></tr><tr><td>Manually inspect the application to find entry points.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Probe entry points to locate vulnerabilities: </b>The adversary uses the entry points gathered in the \"Explore\" phase as a target list and injects postfix null byte(s) followed by a backslash to observe how the application handles them as input. The adversary is looking for areas where user input is placed in the middle of a string, and the null byte causes the application to stop processing the string at the end of the user input.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Try different encodings for null such as \\0 or %00 followed by an encoding for the backslash character.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Remove data after null byte(s): </b>After determined entry points that are vulnerable, the adversary places a null byte(s) followed by a backslash such that they bypass an input filter and remove data after the null byte(s) in a way that is beneficial to them.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>If the input is a directory as part of a longer file path, add a null byte(s) followed by a backslash at the end of the input to try to traverse to the given directory.</td></tr></tbody></table></ol></div>",
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "Null terminators are not properly handled by the filter."
            ],
            "x_capec_skills_required": {
                "Medium": "An adversary needs to understand alternate encodings, what the filter looks for and the data format acceptable to the target API"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}