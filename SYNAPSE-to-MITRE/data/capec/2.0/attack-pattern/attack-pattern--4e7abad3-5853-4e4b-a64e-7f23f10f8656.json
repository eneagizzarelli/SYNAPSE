{
    "id": "bundle--09b74961-75fb-41ec-acbc-79d7214a3836",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An attacker can use Server Side Include (SSI) Injection to send code to a web application that then gets executed by the web server. Doing so enables the attacker to achieve similar results to Cross Site Scripting, viz., arbitrary code execution and information disclosure, albeit on a more limited scale, since the SSI directives are nowhere near as powerful as a full-fledged scripting language. Nonetheless, the attacker can conveniently gain access to sensitive files, such as password files, and execute shell commands.",
            "external_references": [
                {
                    "external_id": "CAPEC-101",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/101.html"
                },
                {
                    "external_id": "CWE-97",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/97.html"
                },
                {
                    "external_id": "CWE-74",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html"
                },
                {
                    "external_id": "CWE-20",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html"
                },
                {
                    "description": "SSI Injection",
                    "external_id": "36",
                    "source_name": "WASC",
                    "url": "http://projects.webappsec.org/SSI-Injection"
                },
                {
                    "description": "Server-Side Includes (SSI) Injection",
                    "source_name": "OWASP Attacks",
                    "url": "https://owasp.org/www-community/attacks/Server-Side_Includes_(SSI)_Injection"
                },
                {
                    "description": "OWASP Web Security Testing Guide, The Open Web Application Security Project (OWASP)",
                    "external_id": "REF-610",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/08-Testing_for_SSI_Injection.html"
                }
            ],
            "id": "attack-pattern--4e7abad3-5853-4e4b-a64e-7f23f10f8656",
            "modified": "2021-10-21T00:00:00.000Z",
            "name": "Server Side Include (SSI) Injection",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_can_precede_refs": [
                "attack-pattern--03a731ef-751b-43de-9159-9667d4be4d1a"
            ],
            "x_capec_child_of_refs": [
                "attack-pattern--5a33bee7-5ec9-4e75-9bf6-99fdaca8699c"
            ],
            "x_capec_consequences": {
                "Availability": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Integrity": [
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_example_instances": [
                "\n               <xhtml:p>Consider a website hosted on a server that permits Server Side Includes (SSI), such as Apache with the \"Options Includes\" directive enabled.</xhtml:p>\n               <xhtml:p>Whenever an error occurs, the HTTP Headers along with the entire request are logged, which can then be displayed on a page that allows review of such errors. A malicious user can inject SSI directives in the HTTP Headers of a request designed to create an error.</xhtml:p>\n               <xhtml:p>When these logs are eventually reviewed, the server parses the SSI directives and executes them.</xhtml:p>\n            "
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Determine applicability: </b>The adversary determines whether server side includes are enabled on the target web server.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Look for popular page file names. The attacker will look for .shtml, .shtm, .asp, .aspx, and other well-known strings in URLs to help determine whether SSI functionality is enabled.</td></tr><tr><td>Fetch .htaccess file. In Apache web server installations, the .htaccess file may enable server side includes in specific locations. In those cases, the .htaccess file lives inside the directory where SSI is enabled, and is theoretically fetchable from the web server. Although most web servers deny fetching the .htaccess file, a misconfigured server will allow it. Thus, an attacker will frequently try it.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p> <b>Find Injection Point: </b>Look for user controllable input, including HTTP headers, that can carry server side include directives to the web server.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use a spidering tool to follow and record all links. Make special note of any links that include parameters in the URL.</td></tr><tr><td>Use a proxy tool to record all links visited during a manual traversal of the web application. Make special note of any links that include parameters in the URL. Manual traversal of this type is frequently necessary to identify forms that are GET method forms rather than POST forms.</td></tr></tbody></table></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Inject SSI: </b>Using the found injection point, the adversary sends arbitrary code to be inlcuded by the application on the server side. They may then need to view a particular page in order to have the server execute the include directive and run a command or open a file on behalf of the adversary.</p></li></ol></div>",
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "A web server that supports server side includes and has them enabled",
                "User controllable input that can carry include directives to the web server"
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack. Determining whether the server supports SSI does not require special tools, and nor does injecting directives that get executed. Spidering tools can make the task of finding and following links easier."
            ],
            "x_capec_skills_required": {
                "Medium": "The attacker needs to be aware of SSI technology, determine the nature of injection and be able to craft input that results in the SSI directives being executed."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}