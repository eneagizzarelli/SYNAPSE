{
    "id": "bundle--fa0985dc-c78f-4ff0-ae87-ddcc4c607ff0",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "The adversary triggers and exploits a deadlock condition in the target software to cause a denial of service. A deadlock can occur when two or more competing actions are waiting for each other to finish, and thus neither ever does. Deadlock conditions can be difficult to detect.",
            "external_references": [
                {
                    "external_id": "CAPEC-25",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/25.html"
                },
                {
                    "external_id": "CWE-412",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/412.html"
                },
                {
                    "external_id": "CWE-567",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/567.html"
                },
                {
                    "external_id": "CWE-662",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/662.html"
                },
                {
                    "external_id": "CWE-667",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/667.html"
                },
                {
                    "external_id": "CWE-833",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/833.html"
                },
                {
                    "external_id": "CWE-1322",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/1322.html"
                },
                {
                    "description": "Endpoint Denial of Service: Application or System Exploitation",
                    "external_id": "T1499.004",
                    "source_name": "ATTACK",
                    "url": "https://attack.mitre.org/wiki/Technique/T1499/004"
                },
                {
                    "description": "G. Hoglund, G. McGraw, Exploiting Software: How to Break Code, 2004--02, Addison-Wesley",
                    "external_id": "REF-1",
                    "source_name": "reference_from_CAPEC"
                },
                {
                    "description": "Wikipedia, The Wikimedia Foundation, Inc",
                    "external_id": "REF-101",
                    "source_name": "reference_from_CAPEC",
                    "url": "http://en.wikipedia.org/wiki/Deadlock"
                },
                {
                    "description": "OWASP Web Security Testing Guide, The Open Web Application Security Project (OWASP)",
                    "external_id": "REF-609",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/07-Testing_for_XML_Injection.html"
                }
            ],
            "id": "attack-pattern--36a2f844-0c20-41d7-9a10-66f1e4c43db8",
            "modified": "2022-09-29T00:00:00.000Z",
            "name": "Forced Deadlock",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Meta",
            "x_capec_consequences": {
                "Availability": [
                    "Resource Consumption (A successful forced deadlock attack compromises the availability of the system by exhausting its available resources.)"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_example_instances": [
                "An example of a deadlock which may occur in database products is the following. Client applications using the database may require exclusive access to a table, and in order to gain exclusive access they ask for a lock. If one client application holds a lock on a table and attempts to obtain the lock on a second table that is already held by a second client application, this may lead to deadlock if the second application then attempts to obtain the lock that is held by the first application (Source: Wikipedia, http://en.wikipedia.org/wiki/Deadlock)"
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p>The adversary initiates an exploratory phase to get familiar with the system.</p></li><li> <p>The adversary triggers a first action (such as holding a resource) and initiates a second action which will wait for the first one to finish.</p></li><li> <p>If the target program has a deadlock condition, the program waits indefinitely resulting in a denial of service.</p></li></ol></div>",
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "The target host has a deadlock condition. There are four conditions for a deadlock to occur, known as the Coffman conditions. [REF-101]",
                "The target host exposes an API to the user."
            ],
            "x_capec_skills_required": {
                "Medium": "This type of attack may be sophisticated and require knowledge about the system's resources and APIs."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}