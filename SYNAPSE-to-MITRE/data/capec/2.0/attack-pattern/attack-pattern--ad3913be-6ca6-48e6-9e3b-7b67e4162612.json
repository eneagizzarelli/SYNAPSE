{
    "id": "bundle--9058c9a8-7070-4a00-991a-0967f12284f3",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "An adversary may execute a flooding attack using XML messages with the intent to deny legitimate users access to a web service. These attacks are accomplished by sending a large number of XML based requests and letting the service attempt to parse each one. In many cases this type of an attack will result in a XML Denial of Service (XDoS) due to an application becoming unstable, freezing, or crashing.",
            "external_references": [
                {
                    "external_id": "CAPEC-528",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/528.html"
                },
                {
                    "external_id": "CWE-770",
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/770.html"
                },
                {
                    "description": "Endpoint Denial of Service:Service Exhaustion Flood",
                    "external_id": "T1499.002",
                    "source_name": "ATTACK",
                    "url": "https://attack.mitre.org/wiki/Technique/T1499/002"
                },
                {
                    "description": "Network Denial of Service:Direct Network Flood",
                    "external_id": "T1498.001",
                    "source_name": "ATTACK",
                    "url": "https://attack.mitre.org/wiki/Technique/T1498/001"
                }
            ],
            "id": "attack-pattern--ad3913be-6ca6-48e6-9e3b-7b67e4162612",
            "modified": "2022-02-22T00:00:00.000Z",
            "name": "XML Flood",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Standard",
            "x_capec_alternate_terms": [
                "XML Denial of Service (XML DoS)"
            ],
            "x_capec_child_of_refs": [
                "attack-pattern--6854fe89-0829-429f-a95c-89e77ab6c8ed"
            ],
            "x_capec_consequences": {
                "Availability": [
                    "Resource Consumption"
                ]
            },
            "x_capec_domains": [
                "Software"
            ],
            "x_capec_example_instances": [
                "Consider the case of attack performed against the createCustomerBillingAccount Web Service for an online store. In this case, the createCustomerBillingAccount Web Service receives a huge number of simultaneous requests, containing nonsense billing account creation information (the small XML messages). The createCustomerBillingAccount Web Services may forward the messages to other Web Services for processing. The application suffers from a high load of requests, potentially leading to a complete loss of availability the involved Web Service."
            ],
            "x_capec_execution_flow": "<h2> Execution Flow </h2><div><h3>Explore</h3><ol><li> <p> <b>Survey the target: </b>Using a browser or an automated tool, an attacker records all instance of web services to process XML requests.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Use an automated tool to record all instances of URLs to process XML requests.</td></tr><tr><td>Use a browser to manually explore the website and analyze how the application processes XML requests.</td></tr></tbody></table></ol></div><div><h3>Experiment</h3><ol><li> <p>An adversary crafts input data that may have an adverse effect on the operation of the web service when the XML data sent to the service.</p></li></ol></div><div><h3>Exploit</h3><ol><li> <p> <b>Launch a resource depletion attack: </b>The attacker delivers a large number of XML messages to the target URLs found in the explore phase at a sufficiently rapid rate. It causes denial of service to the target application.</p></li><table><tbody><tr><th>Techniques</th></tr><tr><td>Send a large number of crafted XML messages to the target URL.</td></tr></tbody></table></ol></div>",
            "x_capec_extended_description": "\n            <xhtml:p>XDoS is most closely associated with web services, SOAP, and Rest, because remote service requesters can post malicious XML payloads to the service provider designed to exhaust the service provider's memory, CPU, and/or disk space. The main weakness in XDoS is that the service provider generally must inspect, parse, and validate the XML messages to determine routing, workflow, security considerations, and so on. It is exactly these inspection, parsing, and validation routines that XDoS targets. This attack exploits the loosely coupled nature of web services, where the service provider has little to no control over the service requester and any messages the service requester sends.</xhtml:p>\n         ",
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_parent_of_refs": [
                "attack-pattern--94238840-08ad-4117-8a20-ed359cda1e7e"
            ],
            "x_capec_prerequisites": [
                "The target must receive and process XML transactions.",
                "An adverssary must possess the ability to generate a large amount of XML based messages to send to the target service."
            ],
            "x_capec_skills_required": {
                "Low": "Denial of service"
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "Medium",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}