{
    "id": "bundle--c3ce8a8f-075b-4e51-8b47-7ace44fab54a",
    "objects": [
        {
            "created": "2014-06-23T00:00:00.000Z",
            "created_by_ref": "identity--e50ab59c-5c4f-4d40-bf6a-d58418d89bcd",
            "description": "\n            <xhtml:p>An adversary exploits a configuration management system so that malicious logic is inserted into a software products build, update or deployed environment. If an adversary can control the elements included in a product's configuration management for build they can potentially replace, modify or insert code files containing malicious logic. If an adversary can control elements of a product's ongoing operational configuration management baseline they can potentially force clients receiving updates from the system to install insecure software when receiving updates from the server.</xhtml:p>\n         ",
            "external_references": [
                {
                    "external_id": "CAPEC-445",
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/445.html"
                },
                {
                    "description": "Supply Chain Compromise: Compromise Software Dependencies and Development Tools",
                    "external_id": "T1195.001",
                    "source_name": "ATTACK",
                    "url": "https://attack.mitre.org/wiki/Technique/T1195/001"
                },
                {
                    "description": "Jon Boyens, Angela Smith, Nadya Bartol, Kris Winkler, Alex Holbrook, Matthew Fallon, Cybersecurity Supply Chain Risk Management Practices for Systems and Organizations (2nd Draft), 2021--10---28, National Institute of Standards and Technology (NIST)",
                    "external_id": "REF-379",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-161r1-draft2.pdf"
                },
                {
                    "description": "Chef Manage deserializes cookie data insecurely, 2016--05---17, Carnegie Mellon University",
                    "external_id": "REF-706",
                    "source_name": "reference_from_CAPEC",
                    "url": "https://www.kb.cert.org/vuls/id/586503"
                }
            ],
            "id": "attack-pattern--f7fd56fe-cc88-4200-907a-8ea3b89e1ddb",
            "modified": "2022-09-29T00:00:00.000Z",
            "name": "Malicious Logic Insertion into Product Software via Configuration Management Manipulation",
            "object_marking_refs": [
                "marking-definition--17d82bb2-eeeb-4898-bda5-3ddbcd2b799d"
            ],
            "type": "attack-pattern",
            "x_capec_abstraction": "Detailed",
            "x_capec_child_of_refs": [
                "attack-pattern--efb74200-657d-438c-aaff-bbd9644dd72d"
            ],
            "x_capec_consequences": {
                "Authorization": [
                    "Execute Unauthorized Commands"
                ]
            },
            "x_capec_domains": [
                "Supply Chain",
                "Software"
            ],
            "x_capec_example_instances": [
                "\n               <xhtml:p>In 2016, the policy-based configuration management system Chef was shown to be vulnerable to remote code execution attacks based on its Chef Manage add-on improperly deserializing user-driven cookie data. This allowed unauthenticated users the ability to craft cookie data that executed arbitrary code with the web server's privileges. [REF-706]</xhtml:p>\n            "
            ],
            "x_capec_extended_description": "\n            <xhtml:p>Configuration management servers operate on the basis of a client pool, instructing each client on which software to install. In some cases the configuration management server will automate the software installation process. A malicious insider or an adversary who has compromised the server can alter the software baseline that clients must install, allowing the adversary to compromise a large number of satellite machines using the configuration management system. If an adversary can control elements of a product's configuration management for its deployed environment they can potentially alter fundamental security properties of the system based on assumptions that secure configurations are in place. It is also worth noting that this attack can occur during initial product development or throughout a product's sustainment.</xhtml:p>\n         ",
            "x_capec_likelihood_of_attack": "Medium",
            "x_capec_prerequisites": [
                "Access to the configuration management system during deployment or currently deployed at a victim location. This access is often obtained via insider access or by leveraging another attack pattern to gain permissions that the adversary wouldn't normally have."
            ],
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "High",
            "x_capec_version": "3.9"
        }
    ],
    "spec_version": "2.0",
    "type": "bundle"
}